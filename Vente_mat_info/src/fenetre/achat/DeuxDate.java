/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fenetre.achat;

import fenetre.cli.*;
import fenetre.mat.*;

import java.util.Date;  // resaka date 
import java.text.SimpleDateFormat;

import java.sql.*; // sql rehetra
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import javax.swing.table.DefaultTableModel; // ito indray @ Affichage @ le tableau vo miasa 
import connection.DatabaseConnection;
import javax.swing.table.TableRowSorter;   // ito le @le cherche anaty  Table
// --------------------- * -----------------

public class DeuxDate extends javax.swing.JFrame {

    private DefaultTableModel model;
    private Connection con;
    private int numCli;
    private String Client;

    /**
     * Creates new form DeuxDate
     */
    public DeuxDate() {
        initComponents();
        this.setLocationRelativeTo(null);
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();  // miantso le fonctoin connecter @le base de donnee 
        con = dbc.getConnection();
        ClientTable();
        txtNom.setEditable(false);
        txtNom.setHorizontalAlignment(SwingConstants.CENTER);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        retour = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableNom = new javax.swing.JTable();
        Search = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Ajouter = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabDate = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        rechercher = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        txtNom = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        jLabel3.setText("Entre Deux Dates");

        retour.setBackground(new java.awt.Color(204, 204, 255));
        retour.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        retour.setForeground(new java.awt.Color(153, 153, 153));
        retour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/cashier_icon-icons.com_53629.png"))); // NOI18N
        retour.setText("Vente");
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        TableNom.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        TableNom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableNom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableNomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableNom);

        Search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyReleased(evt);
            }
        });

        jLabel2.setText("Search");

        Ajouter.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Ajouter.setForeground(new java.awt.Color(0, 204, 204));
        Ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ok2.png"))); // NOI18N
        Ajouter.setText("Valider");
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });

        TabDate.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        TabDate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Numero Achat", "Materiel", "Quatantier", "Client", "Date d'Achat"
            }
        ));
        jScrollPane2.setViewportView(TabDate);

        rechercher.setBackground(new java.awt.Color(0, 102, 204));
        rechercher.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        rechercher.setForeground(new java.awt.Color(255, 255, 255));
        rechercher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/chercher-48.png"))); // NOI18N
        rechercher.setText("Rechercher");
        rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherActionPerformed(evt);
            }
        });

        txtNom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-calendrier-64.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setText("Table Client");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Ajouter, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                .addComponent(rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)
                        .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomActionPerformed

    private void SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyReleased
        String searchString = Search.getText();
        search(searchString);
    }//GEN-LAST:event_SearchKeyReleased

    private void TableNomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableNomMouseClicked
        try {

            numCli = Integer.parseInt(TableNom.getValueAt(TableNom.getSelectedRow(), 0).toString());
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("SELECT numCli, nomCli from achat left join client on achat.idCli = client.numCli where numCli = " + numCli);
            if (rs.next()) {
                txtNom.setText(rs.getString(2));

            }
            rs.close();
            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_TableNomMouseClicked

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        Client = txtNom.getText();

        if (Client.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veillez selectionner l'utilisateur par son ID");
        }else{
        System.out.println(Client);
        System.out.println(numCli);
        Ajouter.setEnabled(false);
        TableNom.setEnabled(false);
        ShowData("", "");
                
                }
    }//GEN-LAST:event_AjouterActionPerformed

    private void rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherActionPerformed
        try {
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            String date1 = df.format(jDateChooser1.getDate());
            String date2 = df.format(jDateChooser2.getDate());

            ShowData(date1, date2);

    }//GEN-LAST:event_rechercherActionPerformed
catch (Exception ex) {
            System.out.println(ex);
        }
    }
    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        new Achat().setVisible(true);
    }//GEN-LAST:event_retourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeuxDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeuxDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeuxDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeuxDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeuxDate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ajouter;
    private javax.swing.JTextField Search;
    private javax.swing.JTable TabDate;
    private javax.swing.JTable TableNom;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton rechercher;
    private javax.swing.JButton retour;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables

    private void ShowData(String d1, String d2) {

        if (d1.equals("") || d2.equals("")) {

            try {

                int rows = 0;
                int rowIndex = 0;
                Statement smt = con.createStatement();
                ResultSet rs = smt.executeQuery("SELECT idAchat,Design, qte, nomCli, dateAchat from achat"
                        + " left join materiel on achat.idMat = materiel.numMat left join client on achat.idCli= Client.numCli "
                        + "where idCli=" + numCli);

                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();

                }
                // System.out.println(rows);

                String[][] data = new String[rows][5];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getInt(1) + "";
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getInt(3) + "";
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);

                    rowIndex++;
                }
                String[] cols = {"numero Achat", "Materiel", "quantité", "Client", "Date d'achat"};
                // String[] cols = {"numMat", "Designation", "Prix Unitaire"};
                model = new DefaultTableModel(data, cols);   // importena koa alohany DefaultTableModel
                TabDate.setModel(model);

                rs.close();
                smt.close();

            } catch (Exception ex) {
                //Logger.getLogger(MainFrom.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }

        } else {

            try {

                int rows = 0;
                int rowIndex = 0;
                Statement smt = con.createStatement();
                String query = "SELECT idAchat, Design, qte, nomCli, dateAchat "
                        + "FROM achat "
                        + "LEFT JOIN materiel ON achat.idMat = materiel.numMat "
                        + "LEFT JOIN client ON achat.idCli = client.numCli "
                        + "WHERE idCli = ? AND dateAchat BETWEEN ? AND ?";
                PreparedStatement statement = con.prepareStatement(query);
                statement.setInt(1, numCli);
                statement.setString(2, d1);
                statement.setString(3, d2);
                ResultSet rs = statement.executeQuery();

                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();

                }
                // System.out.println(rows);

                String[][] data = new String[rows][5];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getInt(1) + "";
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getInt(3) + "";
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);

                    rowIndex++;
                }
                String[] cols = {"numero Achat", "Materiel", "quantité", "Client", "Date d'achat"};
                // String[] cols = {"numMat", "Designation", "Prix Unitaire"};
                model = new DefaultTableModel(data, cols);   // importena koa alohany DefaultTableModel
                TabDate.setModel(model);

                rs.close();
                smt.close();

            } catch (Exception ex) {
                //Logger.getLogger(MainFrom.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }

        }

    }

    private void ClientTable() {
        try {
            //con.createStatement();
            int rows = 0;
            int rowIndex = 0;
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("SELECT DISTINCT numCli, nomCli from achat left join client on achat.idCli = client.numCli");

            // ResultSet rs = smt.executeQuery("select Design,Pu,stock from materiel"); 
            if (rs.next()) {
                rs.last();
                rows = rs.getRow();
                rs.beforeFirst();

            }
            // System.out.println(rows);

            String[][] data = new String[rows][2];
            while (rs.next()) {
                data[rowIndex][0] = rs.getInt(1) + "";
                data[rowIndex][1] = rs.getString(2);

                // data[rowIndex][3] = rs.getString(4) + " Ar";
                rowIndex++;
            }
            String[] cols = {"num Cli", "Nom"};
            // String[] cols = {"numMat", "Designation", "Prix Unitaire"};
            model = new DefaultTableModel(data, cols);   // importena koa alohany DefaultTableModel
            TableNom.setModel(model);

            rs.close();
            smt.close();

        } catch (Exception ex) {
            //Logger.getLogger(MainFrom.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    public void search(String str) {
        model = (DefaultTableModel) TableNom.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        TableNom.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }

}
